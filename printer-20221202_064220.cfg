[include print_area_bed_mesh.cfg]
 # This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.




[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 39.885
endstop_pin: ^PC0
position_endstop: -5
position_min: -5
position_max: 245
homing_speed: 150

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.600
hold_current: 0.600
#stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 39.912
endstop_pin: ^PC1
position_endstop: -10
position_min: -10
position_max: 240
homing_speed: 150

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.600
hold_current: 0.600
#stealthchop_threshold: 999999


[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -10
homing_speed: 50
homing_retract_dist: 5
microsteps: 16
rotation_distance: 8
#homing_positive_dir:true

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.900
hold_current: 0.950
#stealthchop_threshold: 999999

[skew_correction]



[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -48.0
y_offset: -12.0
#z_offset: 2.550
pin_move_time:0.3
pin_up_touch_mode_reports_triggered:true
stow_on_each_sample: false
samples: 2
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 2

[gcode_macro start_print]
gcode:
  LED_ON  
  G28
  
 

#[bed_mesh]
#speed:120
#horizontal_move_z: 5
#mesh_min: 10, 20
#mesh_max: 250, 250
#probe_count: 3,3
#fade_start: 1.0
#mesh_pps: 3,3
[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 30,20
mesh_max: 190, 225
probe_count:3,3
mesh_pps: 2,2

[safe_z_home]
home_xy_position: 170, 130
speed: 150
z_hop: 5
z_hop_speed: 20


[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD2
microsteps: 16
rotation_distance: 23.000
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
max_extrude_only_distance: 200
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
pressure_advance = 0.0425 #ABS
#_advance = 0.0550 #PLA
#pressure_advance = 0.0650 #PETG

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.550
#stealthchop_threshold: 999999




[input_shaper]
#shaper_freq_x: 40.00 # frequency for the X mark of the test model
#shaper_freq_y: 40.00 # frequency for the Y mark of the test model

[screws_tilt_adjust]
screw1: 80.0,45
screw1_name: front left screw
screw2: 245,45
screw2_name: front right screw
screw3: 245,220
screw3_name: rear right screw
screw4: 80.0,220
screw4_name: rear left screw
horizontal_move_z: 5
speed: 150
screw_thread: CW-M4



[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_39FFD3054247333126882257-if00

[mcu rpi]
serial: /tmp/klipper_host_mcu
[adxl345]
cs_pin: rpi:None
[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_accel_to_decel:1500
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity:5.0

[static_digital_output usb_pullup_enable]
pins: !PA14

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G0 X0 Y220
  M107
  M84


[gcode_macro LED_OFF]
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="off")}
                            
[gcode_macro LED_ON]
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="on")}

[idle_timeout]
gcode:  
  LED_OFF
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[menu __main __custom]
type: list
name: Custom

[menu __main __custom __Zoffset]
type: command
name: Z offset
gcode:
    probe_calibrate

[menu __main __custom __Cancel]
type: command
name: Cancel Print
gcode:
    CANCEL_PRINT
[menu __main __custom __Pause]
type: command
name: Pause Print
gcode:
    PAUSE
[menu __main __custom __Resume]
type: command
name: Resume Print
gcode:
    RESUME



# Common parameters available for all menu config sections.

#   Permanently disabled menu element, only required attribute is 'type'.
#   Allows you to easily disable/hide existing menu items.

#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

# See the sample-lcd.cfg file for definitions of common LCD displays.
#tpu offset  = 2.500
#normal = 2.600

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.672
#*# pid_ki = 2.946
#*# pid_kd = 114.143
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.401
#*# pid_ki = 1.476
#*# pid_kd = 887.814
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.135000, 0.080000, 0.138750
#*# 	0.147500, 0.036250, 0.052500
#*# 	0.123750, 0.061250, 0.147500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 3
#*# max_y = 225.0
#*# mesh_x_pps = 2
#*# max_x = 190.0
#*#
#*# [bltouch]
#*# z_offset = 3.000
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 66.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 32.4
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = 0.000501973530034
#*# xz_skew = 0.0
#*# yz_skew = 0.0
